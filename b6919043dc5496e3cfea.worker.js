!function(e){function r(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}var n={};r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:t})},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},r.p="./",r(r.s="TY4L")}({TY4L:function(){"use strict";importScripts("./assets/lib/js/uncompress.js"),self.loadArchiveFormats(["rar","zip","tar"],function(){return console.info("Archive formats loaded")});var e=new RegExp("^.+.(jpeg|jpg|png|bpm|webp|gif)$"),r=function(r){return e.test(r)},n=function(r){var n=e.exec(r);return"image/"+(n?n[1]:"jpeg")},t=function(e,r,t){e.readData(function(o,a){if(a&&self.postMessage({action:"error-data",error:a}),e.is_file&&o){var s=o.byteLength,i=e.name,c=new Blob([o],{type:n(e.name)}),f=URL.createObjectURL(c),u={action:"uncompress:each",archive:{totalEntries:t},file:{url:f,name:i,size:s,index:r}};self.postMessage(u)}})},o=function(e){console.info("Uncompressing:",e);for(var n=e.entries.filter(function(e){return r(e.name)}),o=0,a=n.length;o<a;o++)t(n[o],o,a)},a={"uncompress:start":function(e){var r=e.file_name,n=e.password,t=e.array_buffer;console.log(e);try{var a=self.archiveOpenArrayBuffer(r,n,t);a&&o(a)}catch(e){var s={action:"error",error:e.message};self.postMessage(s)}}},s=function(e){var r=e.data.action;a[r]&&a[r](e.data)};self.addEventListener("message",s,!1)}});
//# sourceMappingURL=b6919043dc5496e3cfea.worker.js.map