!function(e){function r(t){if(n[t])return n[t].exports;var a=n[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,r),a.l=!0,a.exports}var n={};r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:t})},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},r.p="./",r(r.s="TY4L")}({TY4L:function(){"use strict";importScripts("./assets/js/uncompress.js");var e=new RegExp("^.+.(jpeg|jpg|png|bpm|webp|gif)$"),r=function(r){return e.test(r)},n=function(r){var n=e.exec(r);return"image/"+(n?n[1]:"jpeg")},t=function(e,r,t){r.readData(function(a,o){if(o)return self.postMessage({action:"error",payload:{error:o}}),!1;if(r.is_file&&a){var s=a.byteLength,i=r.name,c=new Blob([a],{type:n(r.name)}),f=URL.createObjectURL(c),u={action:"uncompress_each",payload:{file:{index:e,url:f,name:i,size:s}}};0===e&&(u.action="uncompress_cover",u.payload.archive=t),self.postMessage(u)}})},a=function(e){for(var n=e.file_name,a=e.entries,o=a.filter(function(e){return r(e.name)}),s=0,i=o.length;s<i;s++)t(s,o[s],{name:n,totalPages:i})},o={uncompress_start:function(e){try{var r=e.file_name,n=e.password,t=e.array_buffer,o=self.archiveOpenArrayBuffer(r,n,t);o&&a(o)}catch(e){var s={action:"error",payload:{error:e.message}};self.postMessage(s)}}},s=function(e){var r=e.data,n=r.action,t=r.payload;o[n]&&o[n](t)};self.loadArchiveFormats(["rar","zip","tar"],function(){self.addEventListener("message",s,!1),self.postMessage({action:"ready"}),console.info("Worker ready ...")})}});
//# sourceMappingURL=272dc6de8063b6489b1d.worker.js.map